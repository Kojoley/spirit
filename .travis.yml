language: cpp

sudo: false

compiler:
#  - gcc
  - gcc-5
#  - clang
  - clang-3.8

os: linux

addons:
  apt:
    sources:
      - llvm-toolchain-precise-3.8
      - ubuntu-toolchain-r-test
    packages:
      - parallel
      - ccache
      - clang-3.8
      - gcc-5
      - g++-5
      - libicu-dev  # from: libboost-regex-dev

env:
  global:
    - BOOST_ROOT=$HOME/boost
    - BOOST_BUILD_PATH=$HOME/build-boost
    # List of libraries required to build
    #   system: (qi|x3)/tst.cpp
    - BOOST_BUILD_DEPS=date_time,filesystem,regex,system

  # Replace >>>CASES<<< with a list in the following oneliner to generate a build matrix
  #   for m in {c++03,c++11,c++1y}#{>>>CASES<<<}; do echo "STD=${m//#/ JOB=}"; done
  # Tests: test,classic/test,repository/test
  # Headers: repository/test/test_headers,test/test_headers
  # Examples: example,classic/example,repository/example
  # Documentation: doc,classic/doc,repository/doc
  matrix:
    - STD=c++03 JOB=test
    - STD=c++03 JOB=repository/test
    - STD=c++03 JOB=example
    - STD=c++1y JOB=test
    - STD=c++1y JOB=repository/test
    - STD=c++1y JOB=example

cache:
  directories:
    - $HOME/.ccache

before_install:
  - |
    # Creating ~/user-config.jam file
    cat > ~/user-config.jam <<EOF

    import feature ;
    import toolset ;

    using gcc : 5 : ccache g++-5 : <compileflags>-std=$STD ;
    using clang : 3.8 : ccache clang++-3.8 : <compileflags>-std=$STD ;

    feature.extend warnings : extra ;
    toolset.flags gcc.compile OPTIONS <warnings>extra : -Wall -Wextra -pedantic -Wno-long-long -Wshadow : unchecked ; 
    toolset.flags clang-linux.compile OPTIONS <warnings>extra : -Weverything -Wno-long-long -Wno-disabled-macro-expansion -Wno-c++98-compat-pedantic -Wno-old-style-cast -Wno-deprecated -Wno-padded -Wno-global-constructors -Wno-exit-time-destructors -Wno-reserved-id-macro -Wno-undef -Wno-documentation -Wno-documentation-unknown-command -Wno-sign-conversion -Wno-shorten-64-to-32 : unchecked ; 

    feature.feature coverage : off on : optional ;

    # --coverage compiler flag is synonym for -fprofile-arcs -ftest-coverage
    # --coverage linker flag is synonym for -lgcov
    toolset.flags gcc.compile OPTIONS <coverage>on : --coverage : unchecked ;
    toolset.flags gcc.link OPTIONS <coverage>on : --coverage : unchecked ; 

    # `--coverage` flag forces clang to produce profiling data
    # in gcc format. We need this bacause codecov does not support
    # clang profiling format
    #toolset.flags clang-linux.compile OPTIONS <coverage>on : -fprofile-instr-generate -fcoverage-mapping : unchecked ; 
    #toolset.flags clang-linux.link OPTIONS <coverage>on : -fprofile-instr-generate -fcoverage-mapping : unchecked ; 
    toolset.flags clang-linux.compile OPTIONS <coverage>on : --coverage : unchecked ; 
    toolset.flags clang-linux.link OPTIONS <coverage>on : --coverage : unchecked ; 

  - sed 's/^  //' -i ~/user-config.jam
  - cat ~/user-config.jam
  - |
    # Setting a toolset depend on a compiler
    if [[ "$CXX" = "g++" ]]; then
      export TOOLSET=gcc-5
    elif [ "$CXX" = "clang++" ]; then
      export TOOLSET=clang-3.8
    fi
    echo Toolset is $TOOLSET

  - cat $BOOST_BUILD_PATH/cache.name
    || mkdir -p "$BOOST_BUILD_PATH" && echo "Cache not exists"
  - export CACHE_NAME=$TOOLSET-$STD
  - echo "$CACHE_NAME" > $BOOST_BUILD_PATH/cache.name
  - # Dump environment variables
    export
  - $CC --version
  - $CXX --version
  - which clang && clang --version
  - which clang++ && clang++ --version
  - which gcc && gcc --version
  - which g++ && g++ --version
  - |
    # Determining the branch
    if [[ "$TRAVIS_PULL_REQUEST" == "false" ]]; then
      export BRANCH=$TRAVIS_BRANCH
    else
      # It is a pull request. Retrieve the base branch from GitHub
      GH_PR_API=https://api.github.com/repos/$TRAVIS_REPO_SLUG/pulls/$TRAVIS_PULL_REQUEST
      export BRANCH=`curl -s $GH_PR_API | jq -r .head.ref`;
    fi
    if [[ "$BRANCH" != "master" && "$BRANCH" != "develop" ]]; then
      # Travis has been triggered not from our main branches.
      # Find out the base branch from the git history
      export BRANCH=develop
    fi
    echo Root branch is $BRANCH
  - travis_retry git clone https://github.com/boostorg/boost.git $BOOST_ROOT
                           --branch=$BRANCH --depth=1
  - pushd $BOOST_ROOT
  
  - parallel --version
  - # Checkout Boost submodules

    git submodule init |
    tee submodule_init.log |
    awk '{ print substr($2, 2, length($2) - 2) "\t"
                 substr($3, 2, length($3) - 2) "\t"
                 substr($7, 2, length($7) - 2) }' |
    grep -v 'spirit' |
    grep -v 'phoenix' |
    tee checkout.list |
    parallel --gnu --retries 3 -j10 --colsep '\t' -k
             --joblog checkout.joblog --tagstring "[{1}]"
             git clone --branch=$BRANCH --depth=1 --recursive {2} {3}
    || (
      echo "=== submodule init ===" ;
      cat submodule_init.log ;
      echo "=== checkout list ===" ;
      cat checkout.list ;
      echo "=== checkout joblog ===" ;
      cat checkout.joblog ;
      exit 1 ;
     )

  - git clone --branch=boost-1.58.0 --depth=1 --recursive https://github.com/boostorg/phoenix.git libs/phoenix
  - pushd libs/phoenix
  - PATCH_URL=https://github.com/boostorg/phoenix/pull/44.patch;
    curl -sL $PATCH_URL | patch -sup 1
  - popd

  # -Wweak-vtables patches
  - pushd libs/smart_ptr
  - PATCH_URL=https://github.com/Kojoley/smart_ptr/pull/1.patch;
    curl -sL $PATCH_URL | patch -sup 1
  - popd
  - pushd libs/optional
  - PATCH_URL=https://github.com/Kojoley/optional/pull/1.patch;
    curl -sL $PATCH_URL | patch -sup 1
  - popd
  - pushd libs/function
  - PATCH_URL=https://github.com/Kojoley/function/pull/1.patch;
    curl -sL $PATCH_URL | patch -sup 1
  - popd

  - rm -rf libs/spirit
  - ./bootstrap.sh --with-toolset=${TOOLSET%%-*}
                   --with-libraries=$BOOST_BUILD_DEPS
    || ( cat bootstrap.log ; exit 1 ; )
  - ./b2 headers
  - ./b2 -j`nproc` toolset=$TOOLSET --build-dir=$BOOST_BUILD_PATH

  #- export BOOST_BUILD_PATH=$(pwd)
  #- export PATH=$BOOST_BUILD_PATH:$PATH

  #- ln -s $TRAVIS_BUILD_DIR libs/spirit

  - mv $TRAVIS_BUILD_DIR libs/spirit
  - ln -s libs/spirit $TRAVIS_BUILD_DIR

  #- popd
  - cd libs/spirit

  # extract_sig signature patch
  - PATCH_URL=https://github.com/Kojoley/spirit/pull/2.patch;
    curl -sL $PATCH_URL | patch -sup 1

  #- touch Jamroot
  - cd $JOB

script:
  - $BOOST_ROOT/b2 -j`nproc` toolset=$TOOLSET coverage=on warnings=extra define=BOOST_RESULT_OF_USE_TR1 #include="$BOOST_ROOT"

after_success:
  - bash <(curl -s https://codecov.io/bash) -e TOOLSET,STD
